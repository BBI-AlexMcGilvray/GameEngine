# dependencies on Materials library

message("Configuring Pipeline")

add_subdirectory(Dependencies)

set(SOURCE_FILES #
Animation/Source/AnimationCurve.cpp #
Animation/Source/AnimationManager.cpp #
Animation/Source/Animator.cpp #
Animation/Source/Channel.cpp #
Animation/Source/Keyframe.cpp #
Animation/Source/SkeletonAnimation.cpp #
Collision/CollisionManager.cpp #
Collision/OctTree.cpp #
ECS/DataOriented/Systems/SystemManager.cpp #
ECS/DataOriented/Archetype.cpp #
ECS/DataOriented/ArchetypeManager.cpp #
ECS/DataOriented/EntityCreator.cpp #
ECS/ObjectOriented/Source/Component.cpp #
ECS/ObjectOriented/Source/Entity.cpp #
ECSSystems/AnimationSystem.cpp #
GameSystem/Source/GameObjectBase.cpp #
GameSystem/Source/GameObjectManager.cpp #
GameSystem/Source/GameSystemManager.cpp #
Geometric/Source/CameraNode.cpp #
Geometric/Source/ContainerBase.cpp #
Geometric/Source/ContentBase.cpp #
Geometric/Source/HierarchyComponent.cpp #
Geometric/Source/HierarchyTransform.cpp #
Geometric/Source/Node.cpp #
Geometric/Source/Scene.cpp #
Geometric/Source/World.cpp #
Input/Source/InputController.cpp #
Input/Source/InputDefs.cpp #
Input/Source/InputEvent.cpp #
Input/Source/InputManager.cpp #
Input/Source/InputReceiverBase.cpp #
Rendering/2D/Source/SimpleShapes.cpp #
Rendering/2D/Source/Image.cpp #
Rendering/2D/Source/Sprite.cpp #
Rendering/2D/Source/Texture.cpp #
Rendering/3D/Source/AnimatedModel.cpp #
Rendering/3D/Source/ModelBase.cpp #
Rendering/3D/Source/SimpleShapes.cpp #
Rendering/3D/Source/Skeleton.cpp #
Rendering/3D/Source/VertexData.cpp #
Rendering/OpenGL/Source/GLArrayBuffer.cpp #
Rendering/OpenGL/Source/GLBuffer.cpp #
Rendering/OpenGL/Source/GLMappedBuffer.cpp #
Rendering/OpenGL/Source/GLObject.cpp #
Rendering/OpenGL/Source/GLShader.cpp #
Rendering/OpenGL/Source/GLShaderProgram.cpp #
Rendering/OpenGL/Source/ShaderUtils.cpp #
Rendering/Shaders/Shader.cpp #
Rendering/Shaders/ShaderManager.cpp #
Rendering/Source/Camera.cpp #
Rendering/Source/CameraManager.cpp #
Rendering/Source/CameraUtils.cpp #
Rendering/Source/Lights.cpp #
Rendering/Source/MaterialManager.cpp #
Rendering/Source/RenderManager.cpp #
Rendering/Material.cpp #
Rendering/Mesh.cpp #
Rendering/Renderer.cpp #
Source/ApplicationManager.cpp #
Source/GLContextManager.cpp #
Source/SDL2Manager.cpp #
Source/ServiceManager.cpp #
Source/WindowManager.cpp #
StateSystem/Source/State.cpp #
StateSystem/Source/StateManager.cpp #
Time/Source/TimeManager.cpp #
UI/IMGUI/Manager.cpp #
UI/IMGUI/Windows/Examples.cpp #
UI/IMGUI/Windows/Profiler.cpp)

set(HEADER_FILES #
Animation/Headers/Animation.h #
Animation/Headers/AnimationCurve.h #
Animation/Headers/AnimationManager.h #
Animation/Headers/Animator.h #
Animation/Headers/Channel.h #
Animation/Headers/ChannelTypes.h #
Animation/Headers/Keyframe.h #
Animation/Headers/SkeletonAnimation.h #
Collision/Collision.h #
Collision/CollisionManager.h #
Collision/OctTree.h #
ECS/DataOriented/Systems/System.h #
ECS/DataOriented/Systems/SystemManager.h #
ECS/DataOriented/Archetype.h #
ECS/DataOriented/ArchetypeManager.h #
ECS/DataOriented/Component.h #
ECS/DataOriented/ECS.h #
ECS/DataOriented/EntityCreator.h #
ECS/DataOriented/IDs.h #
ECS/DataOriented/TypeCollection.h #
ECS/ObjectOriented/Headers/Component.h #
ECS/ObjectOriented/Headers/ComponentPtr.h #
ECS/ObjectOriented/Headers/Entity.h #
ECSSystems/DebugSystems/DebugCollisionSystem.h #
ECSSystems/DebugSystems/DebugBoneSystem.h #
ECSSystems/DebugSystems/DebugWorldTransformSystem.h #
ECSSystems/DebugSystems/DebugOctTreeSystem.h #
ECSSystems/AnimationSystem.h #
ECSSystems/AnimationComponents.h #
ECSSystems/CameraSystem.h #
ECSSystems/CameraComponents.h #
ECSSystems/CollisionComponents.h #
ECSSystems/CollisionSystem.h #
ECSSystems/GeneralComponents.h #
ECSSystems/RenderingComponents.h #
ECSSystems/RenderingSystem.h #
ECSSystems/TransformComponents.h #
ECSSystems/TransformSystem.h #
GameSystem/Headers/GameObjectBase.h #
GameSystem/Headers/GameObjectManager.h #
GameSystem/Headers/GameSystemManager.h #
Geometric/Headers/CameraNode.h #
Geometric/Headers/ContainerBase.h #
Geometric/Headers/ContentBase.h #
Geometric/Headers/HierarchyComponent.h #
Geometric/Headers/HierarchyTransform.h #
Geometric/Headers/Node.h #
Geometric/Headers/Scene.h #
Geometric/Headers/World.h #
Headers/ApplicationManager.h #
Headers/GLContextManager.h #
Headers/SDL2Manager.h #
Headers/ServiceManager.h #
Headers/WindowManager.h #
Input/Headers/InputController.h #
Input/Headers/InputDefs.h #
Input/Headers/InputEvent.h #
Input/Headers/InputManager.h #
Input/Headers/InputReceiverBase.h #
Rendering/2D/Headers/SimpleShapes.h #
Rendering/2D/Headers/Image.h #
Rendering/2D/Headers/Sprite.h #
Rendering/2D/Headers/Texture.h #
Rendering/3D/Headers/AnimatedModel.h #
Rendering/3D/Headers/ModelBase.h #
Rendering/3D/Headers/SimpleShapes.h #
Rendering/3D/Headers/Skeleton.h #
Rendering/3D/Source/VertexData.h #
Rendering/Headers/Camera.h #
Rendering/Headers/CameraManager.h #
Rendering/Headers/CameraUtils.h #
Rendering/Headers/Lights.h #
Rendering/Headers/MaterialManager.h #
Rendering/Headers/RenderManager.h #
Rendering/OpenGL/Headers/GLArrayBuffer.h #
Rendering/OpenGL/Headers/GLBuffer.h #
Rendering/OpenGL/Headers/GLMappedBuffer.h #
Rendering/OpenGL/Headers/GLObject.h #
Rendering/OpenGL/Headers/GLShader.h #
Rendering/OpenGL/Headers/GLShaderProgram.h #
Rendering/OpenGL/Headers/ShaderUtils.h #
Rendering/Shaders/Shader.h #
Rendering/Shaders/ShaderManager.h #
Rendering/Material.h #
Rendering/Mesh.h #
Rendering/RenderContext.h #
Rendering/Renderer.h #
StateSystem/Headers/State.h #
StateSystem/Headers/StateManager.h #
Time/Headers/TimeManager.h #
UI/IMGUI/Manager.h #
UI/IMGUI/Window.h #
UI/IMGUI/Windows/Examples.h #
UI/IMGUI/Windows/Profiler.h)

install(FILES ${HEADER_FILES} DESTINATION Pipeline_Lib)

add_library(Pipeline_Lib STATIC ${SOURCE_FILES})
target_link_libraries(Pipeline_Lib Materials_Lib Pipeline_Dependencies_Lib)
target_include_directories(Pipeline_Lib
    PUBLIC
        ${CMAKE_CURRENT_SOURCE_DIR}/..
)