# dependencies on Materials library

message("Configuring Pipeline")

add_subdirectory(Dependencies)

set(SOURCE_FILES #
Animation/FieldAnimation/Source/FloatAnimationTrack.cpp #
Animation/SkeletonAnimation/Source/SkeletonAnimatable.cpp #
Animation/SkeletonAnimation/Source/SkeletonAnimation.cpp #
Animation/SkeletonAnimation/Source/SkeletonAnimationMixer.cpp #
Animation/SkeletonAnimation/Source/SkeletonAnimationTrack.cpp #
Animation/Source/Animatable.cpp #
Animation/Source/AnimationCurve.cpp #
Animation/Source/AnimationManager.cpp #
Animation/Source/AnimationMixer.cpp #
Animation/Source/Animator.cpp #
Animation/Source/AnimatorComponent.cpp #
Animation/Source/Keyframe.cpp #
Animation/TransformAnimation/Source/TransformAnimationTrack.cpp #
Collision/Source/BoxCollider.cpp #
Collision/Source/ColliderBase.cpp #
Collision/Source/CollisionBase.cpp #
Collision/Source/CollisionCheck.cpp #
Collision/Source/CollisionManager.cpp #
Collision/Source/SphericalCollider.cpp #
Debugging/Source/Logging.cpp #
GameSystem/Source/GameObjectBase.cpp #
GameSystem/Source/GameObjectManager.cpp #
GameSystem/Source/GameSystemManager.cpp #
Geometric/Source/CameraNode.cpp #
Geometric/Source/ContainerBase.cpp #
Geometric/Source/ContentBase.cpp #
Geometric/Source/HierarchyComponent.cpp #
Geometric/Source/Node.cpp #
Geometric/Source/Scene.cpp #
Geometric/Source/World.cpp #
Input/Source/InputController.cpp #
Input/Source/InputDefs.cpp #
Input/Source/InputEvent.cpp #
Input/Source/InputManager.cpp #
Input/Source/InputReceiverBase.cpp #
Rendering/2D/Source/BoxRenderObject.cpp #
Rendering/2D/Source/CircleRenderObject.cpp #
Rendering/2D/Source/Image.cpp #
Rendering/2D/Source/Material.cpp #
Rendering/2D/Source/MaterialComponent.cpp #
Rendering/2D/Source/Sprite.cpp #
Rendering/2D/Source/Texture.cpp #
Rendering/3D/Source/AnimatedModel.cpp #
Rendering/3D/Source/Bone.cpp #
Rendering/3D/Source/CubeRenderObject.cpp #
Rendering/3D/Source/ModelBase.cpp #
Rendering/3D/Source/SimpleMeshBase.cpp #
Rendering/3D/Source/Skeleton.cpp #
Rendering/3D/Source/SkeletonComponent.cpp #
Rendering/3D/Source/SkinnedMeshBase.cpp #
Rendering/3D/Source/SphereRenderObject.cpp #
Rendering/3D/Source/VertexData.cpp #
Rendering/Animation/Source/KeyFrame.cpp #
Rendering/Animation/Source/Timeline.cpp #
Rendering/OpenGL/Source/GLArrayBuffer.cpp #
Rendering/OpenGL/Source/GLBuffer.cpp #
Rendering/OpenGL/Source/GLMappedBuffer.cpp #
Rendering/OpenGL/Source/GLObject.cpp #
Rendering/OpenGL/Source/GLShader.cpp #
Rendering/OpenGL/Source/GLShaderProgram.cpp #
Rendering/OpenGL/Source/ShaderUtils.cpp #
Rendering/Shaders/Source/DebugObjectShader.cpp #
Rendering/Shaders/Source/DebugVertexShader.cpp #
Rendering/Shaders/Source/FragmentShader.cpp #
Rendering/Shaders/Source/ObjectShader.cpp #
Rendering/Shaders/Source/ObjectShaderBase.cpp #
Rendering/Shaders/Source/ShaderBase.cpp #
Rendering/Shaders/Source/ShaderManager.cpp #
Rendering/Shaders/Source/SkinnedObjectShader.cpp #
Rendering/Shaders/Source/SkinnedVertexShader.cpp #
Rendering/Shaders/Source/VertexShader.cpp #
Rendering/Source/Camera.cpp #
Rendering/Source/CameraComponent.cpp #
Rendering/Source/CameraManager.cpp #
Rendering/Source/CameraUtils.cpp #
Rendering/Source/Lights.cpp #
Rendering/Source/MaterialManager.cpp #
Rendering/Source/RenderComponent.cpp #
Rendering/Source/Renderer.cpp #
Rendering/Source/RenderManager.cpp #
Rendering/Source/RenderObjectBase.cpp #
Rendering/Source/RenderObjectManager.cpp #
Rendering/Source/SingleCameraManager.cpp #
Source/ApplicationManager.cpp #
Source/Component.cpp #
Source/Entity.cpp #
Source/GLContextManager.cpp #
Source/SDL2Manager.cpp #
Source/WindowManager.cpp #
StateSystem/Source/State.cpp #
StateSystem/Source/StateManager.cpp #
Time/Source/TimeManager.cpp #
UI/IMGUI/IMGUIManager.cpp)

set(HEADER_FILES #
Animation/FieldAnimation/Headers/FloatAnimationTrack.h #
Animation/Headers/Animatable.h #
Animation/Headers/Animation.h #
Animation/Headers/AnimationCurve.h #
Animation/Headers/AnimationManager.h #
Animation/Headers/AnimationMixer.h #
Animation/Headers/Animator.h #
Animation/Headers/AnimatorComponent.h #
Animation/Headers/Keyframe.h #
Animation/SkeletonAnimation/Headers/SkeletonAnimatable.h #
Animation/SkeletonAnimation/Headers/SkeletonAnimation.h #
Animation/SkeletonAnimation/Headers/SkeletonAnimationMixer.h #
Animation/SkeletonAnimation/Headers/SkeletonAnimationTrack.h #
Animation/TransformAnimation/Headers/TransformAnimationTrack.h #
Collision/Headers/BoxCollider.h #
Collision/Headers/ColliderBase.h #
Collision/Headers/CollisionBase.h #
Collision/Headers/CollisionCheck.h #
Collision/Headers/CollisionManager.h #
Collision/Headers/SphericalCollider.h #
Debugging/Headers/Declarations.h #
Debugging/Headers/Logging.h #
Debugging/Headers/Macros.h #
GameSystem/Headers/GameObjectBase.h #
GameSystem/Headers/GameObjectManager.h #
GameSystem/Headers/GameSystemManager.h #
Geometric/Headers/CameraNode.h #
Geometric/Headers/ContainerBase.h #
Geometric/Headers/ContentBase.h #
Geometric/Headers/HierarchyComponent.h #
Geometric/Headers/Node.h #
Geometric/Headers/Scene.h #
Geometric/Headers/World.h #
Headers/ApplicationManager.h #
Headers/Component.h #
Headers/Entity.h #
Headers/GLContextManager.h #
Headers/SDL2Manager.h #
Headers/WindowManager.h #
Input/Headers/InputController.h #
Input/Headers/InputDefs.h #
Input/Headers/InputEvent.h #
Input/Headers/InputManager.h #
Input/Headers/InputReceiverBase.h #
Rendering/2D/Headers/BoxRenderObject.h #
Rendering/2D/Headers/CircleRenderObject.h #
Rendering/2D/Headers/Image.h #
Rendering/2D/Headers/Material.h #
Rendering/2D/Headers/MaterialComponent.h #
Rendering/2D/Headers/Sprite.h #
Rendering/2D/Headers/Texture.h #
Rendering/3D/Headers/AnimatedModel.h #
Rendering/3D/Headers/Bone.h #
Rendering/3D/Headers/CubeRenderObject.h #
Rendering/3D/Headers/ModelBase.h #
Rendering/3D/Headers/SimpleMeshBase.h #
Rendering/3D/Headers/Skeleton.h #
Rendering/3D/Headers/SkeletonComponent.h #
Rendering/3D/Headers/SkinnedMeshBase.h #
Rendering/3D/Headers/SphereRenderObject.h #
Rendering/3D/Source/VertexData.h #
Rendering/Animation/Headers/KeyFrame.h #
Rendering/Animation/Headers/Timeline.h #
Rendering/Headers/Camera.h #
Rendering/Headers/CameraComponent.h #
Rendering/Headers/CameraManager.h #
Rendering/Headers/CameraUtils.h #
Rendering/Headers/Lights.h #
Rendering/Headers/MaterialManager.h #
Rendering/Headers/RenderComponent.h #
Rendering/Headers/Renderer.h #
Rendering/Headers/RenderManager.h #
Rendering/Headers/RenderObjectBase.h #
Rendering/Headers/RenderObjectManager.h #
Rendering/Headers/SingleCameraManager.h #
Rendering/OpenGL/Headers/GLArrayBuffer.h #
Rendering/OpenGL/Headers/GLBuffer.h #
Rendering/OpenGL/Headers/GLMappedBuffer.h #
Rendering/OpenGL/Headers/GLObject.h #
Rendering/OpenGL/Headers/GLShader.h #
Rendering/OpenGL/Headers/GLShaderProgram.h #
Rendering/OpenGL/Headers/ShaderUtils.h #
Rendering/Shaders/Headers/DebugObjectShader.h #
Rendering/Shaders/Headers/DebugVertexShader.h #
Rendering/Shaders/Headers/FragmentShader.h #
Rendering/Shaders/Headers/ObjectShader.h #
Rendering/Shaders/Headers/ObjectShaderBase.h #
Rendering/Shaders/Headers/ShaderBase.h #
Rendering/Shaders/Headers/ShaderManager.h #
Rendering/Shaders/Headers/SkinnedObjectShader.h #
Rendering/Shaders/Headers/SkinnedVertexShader.h #
Rendering/Shaders/Headers/VertexShader.h #
StateSystem/Headers/State.h #
StateSystem/Headers/StateManager.h #
Time/Headers/TimeManager.h #
UI/IMGUI/IMGUIManager.h)

install(FILES ${HEADER_FILES} DESTINATION Pipeline_Lib)

add_library(Pipeline_Lib STATIC ${SOURCE_FILES})
target_link_libraries(Pipeline_Lib Materials_Lib Pipeline_Dependencies_Lib)
target_include_directories(Pipeline_Lib
    PUBLIC
        ${CMAKE_CURRENT_SOURCE_DIR}/..
)